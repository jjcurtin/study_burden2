---
title: "EMA adherence" 
author: "Kendra Wyant"
date: "`r lubridate::today()`"
format: 
  html: 
    embed-resources: true
    toc: true 
    toc_depth: 4
editor_options: 
  chunk_output_type: console
--- 



Purpose: This file calculates overall weekly EMA adherence using EMA survey data (`survey_daily.csv`). 

## Set up
```{r}
#| message: false
#| warning: false
#| code-fold: true

options(conflicts.policy = "depends.ok")
library(tidyverse) 
library(lubridate)
library(skimr)
library(DiagrammeR) # for flowchart

devtools::source_url("https://github.com/jjcurtin/lab_support/blob/main/format_path.R?raw=true")

theme_set(theme_classic())

path_burden <- format_path("studydata/risk2/data_processed/burden2")
path_shared <- format_path("studydata/risk2/data_processed/shared")
```


### Data

```{r}
ema <- read_csv(here::here(path_shared, "survey_daily.csv"),
                show_col_types = FALSE)

monthly <- read_csv(here::here(path_shared, "generic_monthly_wide.csv"),
                show_col_types = FALSE) 

burden_quant <- read_csv(here::here(path_burden, "burden_quant.csv"),
                   show_col_types = FALSE)
burden_qual <- read_csv(here::here(path_burden, "burden_qual.csv"),
                   show_col_types = FALSE)

dem <- read_csv(here::here(path_burden, "demographics.csv"),
                show_col_types = FALSE) 

lapses <- read_csv(here::here(path_shared, "survey_lapses.csv"), col_types = cols()) 
```

burden subids
```{r}
burden_subids <- burden_quant |> 
  pull(subid) |>
  unique()
```



### Disposition   

Study start and end dates for each subid
```{r}
study_start <- ema |> 
  group_by(subid) |> 
  arrange(start_date) |> 
  slice(1) |> 
  ungroup() |> 
  mutate(study_start = as_date(start_date)) |> 
  select(subid, study_start)

study_end <- ema |> 
  group_by(subid) |> 
  arrange(desc(start_date)) |> 
  slice(1) |> 
  ungroup() |> 
  mutate(study_end = as_date(start_date)) |> 
  select(subid, study_end)

dates <- study_start |> 
  full_join(study_end, by = "subid") |> 
  mutate(study_days = study_end - study_start)
```

Days on study     

`r nrow(dates)` participants started study/provided at least one month of EMA.   
```{r}
dates |> 
  skim(study_days) |> 
  yank("difftime")
```

For participants who completed burden study:    
Min days on study = 122 days (all participants provided data for at least 4 months)
```{r}
dates |> 
  filter(subid %in% burden_subids) |>
  skim(study_days) |> 
  yank("difftime")
```


Disposition of participants by month     

```{r}
#| code-fold: true
#| 
month_1 <- dates |> 
  filter(study_days >= 30) |> 
  nrow()

month_2 <- dates |> 
  filter(study_days >= 60)  |> 
  nrow()

month_3 <- dates |> 
  filter(study_days >= 90)  |> 
  nrow()

month_4 <- dates |> 
  filter(study_days >= 120)  |> 
  nrow()

month_4_burden <- dates |>
  filter(study_days >= 120)  |> 
  filter(subid %in% burden_subids)  |> 
  nrow()

month_5 <- dates |> 
  filter(study_days >= 150)  |> 
  nrow()

month_6 <- dates |>
  filter(study_days >= 180)  |> 
  nrow()

month_7 <- dates |>
  filter(study_days >= 210)  |> 
  nrow()

month_8 <- dates |>
  filter(study_days >= 240)  |> 
  nrow()

month_9 <- dates |>
  filter(study_days >= 270)  |> 
  nrow()

month_10 <- dates |>
  filter(study_days >= 300)  |> 
  nrow()

month_11 <- dates |>
  filter(study_days >= 330) |> 
  nrow()

month_12 <- dates |>
  filter(study_days >= 360) |> 
  nrow()
```

**Some participants on study past 4 months but have no burden data**

```{r}
#| code-fold: true

DiagrammeR::grViz("
  digraph {
  
  node [fontname = 'Arial', shape = rectangle, fixedsize = true, width = 1.7, height = .6]
  a [label = '@@1']
  b [label = '@@2']
  c [label = '@@3']
  d1 [label = '@@4']
  d2 [label = '@@5', color = crimson]
  e1 [label = '@@6']
  f1 [label = '@@7']
  g1 [label = '@@8']
  h1 [label = '@@9']
  i1 [label = '@@10']
  j1 [label = '@@11']
  k1 [label = '@@12']
  l1 [label = '@@13']
  
  
  {rank = same; d1; d2}
  a -> b
  b -> c
  c -> d1 -> d2
  d1 -> e1 -> f1 -> g1 -> h1 -> i1 -> j1 -> k1 -> l1
  }
  
  [1]: paste('Month 1\\n', 'N = ', month_1)
  [2]: str_c('Month 2\\n', 'N = ', month_2) 
  [3]: str_c('Month 3\\n', 'N = ', month_3)
  [4]: str_c('Month 4\\n', 'N = ', month_4)
  [5]: str_c('Month 4 + Survey\\n', 'N = ', month_4_burden)
  [6]: str_c('Month 5\\n', 'N = ', month_5)
  [7]: str_c('Month 6\\n', 'N = ', month_6)
  [8]: str_c('Month 7\\n', 'N = ', month_7)
  [9]: str_c('Month 8\\n', 'N = ', month_8)
  [10]: str_c('Month 9\\n', 'N = ', month_9)
  [11]: str_c('Month 10\\n', 'N = ', month_10)
  [12]: str_c('Month 11\\n', 'N = ', month_11)
  [13]: str_c('Month 12\\n', 'N = ', month_12)
  ", height = "1000px") 
```

Plot attrition by month
```{r}
#| label: fig-1
#| fig-cap: "Study Attrition by Month"

disposition <- tibble(n = c(month_1, month_2, month_3, month_4, month_5, month_6, 
                            month_7, month_8, month_9, month_10, month_11, month_12),
                      prop = n/month_1,
                      month = 1:12)


disposition |> 
  group_by(month) |> 
  ggplot(aes(x = month, y = prop)) +
  geom_point() +
  geom_line() +
  theme_classic() +
  scale_x_continuous(name = "Month", 
                     breaks = seq(1, 12, 1)) +
  scale_y_continuous(name = "Proportion of participants retained on study", 
                     breaks = seq(0, 1, .1), 
                     limits = c(0, 1)) +
  labs(title = "Participant Attrition by month (N enrolled = 336)") +
  theme(legend.title = element_blank()) 
```


Attrition at 11 4 months and 11 months by race
```{r}
dates_race <- dates |> 
  left_join(dem |> 
              select(subid, race_multiple), by = "subid")

baseline_race <- dates_race |> 
  group_by(race_multiple) |> 
  summarise(baseline_n = n())

month_4_race <- dates_race |> 
  filter(study_days >= 120)  |> 
  group_by(race_multiple) |> 
  summarise(month_4_n = n())

month_11_race <- dates_race |> 
  filter(study_days >= 330)  |> 
  group_by(race_multiple) |> 
  summarise(month_11_n = n())

data_race <- baseline_race |> 
  left_join(month_4_race, by = "race_multiple") |> 
  left_join(month_11_race, by = "race_multiple") |> 
  mutate(month_4_prop = month_4_n/baseline_n,
         month_11_prop = month_11_n/baseline_n,
         race = if_else(race_multiple == "Non-Hispanic White", .5, -.5))


m_4_month <- lm(month_4_prop ~ race, data = data_race)

broom::tidy(m_4_month)

m_11_month <- lm(month_11_prop ~ race, data = data_race)

broom::tidy(m_11_month)
```

Attrition by lapse
```{r}
dates_lapse <- dates |> 
  left_join(lapses |>
              group_by(subid) |> 
              summarise(n_lapse = n()), by = "subid") |>
  mutate(n_lapse = if_else(is.na(n_lapse), 0, n_lapse),
         lapse = if_else(n_lapse > 0, .5, -.5))

baseline_lapse <- dates_lapse |> 
  group_by(lapse) |> 
  summarise(baseline_n = n())

month_4_lapse <- dates_lapse |> 
  filter(study_days >= 120)  |> 
  group_by(lapse) |> 
  summarise(month_4_n = n())

month_11_lapse <- dates_lapse |> 
  filter(study_days >= 330)  |> 
  group_by(lapse) |> 
  summarise(month_11_n = n())

data_lapse <- baseline_lapse |> 
  left_join(month_4_lapse, by = "lapse") |> 
  left_join(month_11_lapse, by = "lapse") |> 
  mutate(month_4_prop = month_4_n/baseline_n,
         month_11_prop = month_11_n/baseline_n)


m_4_month_lapse <- lm(month_4_prop ~ lapse, data = data_lapse)

broom::tidy(m_4_month_lapse)

m_11_month_lapse <- lm(month_11_prop ~ lapse, data = data_lapse)

broom::tidy(m_11_month_lapse)
```




### Daily Survey Overall Adherence 

Get all study days for each subid
```{r}
# function to map over
get_study_days <- function(the_subid, dates) {
  study_start <- dates |>  filter(subid == the_subid) |>  pull(study_start)
  study_end <- dates |>  filter(subid == the_subid) |> pull(study_end)
  study_days <- tibble(subid = the_subid, study_day = seq(study_start, study_end - days(1), by = "day")) 
  return(study_days)
}

study_dates <- dates$subid |> 
  map_dfr(~get_study_days(.x, dates))
```


Count surveys per study day (day starts at 6 am) 
```{r}
ema_count <- ema |>
  mutate(study_day = if_else(hour(start_date) >= 6, 
                        as_date(start_date),
                        as_date(start_date) - days(1))) |> 
  count(subid, study_day) 


ema_count <- ema_count |> 
  mutate(n = if_else(n > 1, 1, n))
```

Add counts to study dates
```{r}
count_study_dates <- study_dates |> 
  left_join(ema_count, by = c("subid", "study_day")) |> 
  mutate(n = if_else(is.na(n), 0, n)) |> 
  mutate(n_prompts = 1) 
```


calculate mean adherence
```{r}
mean_ema <- count_study_dates |> 
  group_by(subid) |> 
  summarize(n_total = sum(n), prompt_total = sum(n_prompts)) |> 
  mutate(mean = n_total/prompt_total) |> 
  ungroup() |> 
  summarize(mean = mean(mean))
```


**On average participants (N = `r length(unique(study_dates$subid))`) completed `r round(mean_ema$mean, 2)` daily surveys each day they were on study. That is their overall adherence for a once daily EMA was `r round(mean_ema$mean, 2)*100`%.**    


Hist of overall adherence by subid
```{r}
#| code-fold: true

count_study_dates |> 
  group_by(subid) |> 
  summarise(n_total = sum(n),
            n_prompts = sum(n_prompts)) |> 
  mutate(adherence = n_total/n_prompts) |> 
  ggplot(aes(x = adherence)) +
  geom_histogram(color = "black", fill = "light grey", binwidth = .1, center = .55) +
  scale_x_continuous(breaks = c(0, 0.10, 0.20, 0.30, 0.40, 0.50, 0.60, 0.70, 0.80, 0.90, 1.0)) +
  labs(y = "Frequency", x = "Proportion of daily survey's completed",
       subtitle = "Daily Survey Adherence (N = 336)") +
  geom_vline(aes(xintercept = mean_ema$mean), linewidth = .3) +
  theme_classic()
```

Adherence by race
```{r}
daily_race <- count_study_dates |> 
  group_by(subid) |> 
  summarize(n_total = sum(n), prompt_total = sum(n_prompts)) |> 
  mutate(mean = n_total/prompt_total) |> 
  left_join(dem |> 
              select(subid, race_multiple), by = "subid") |> 
  mutate(race = if_else(race_multiple == "Non-Hispanic White", .5, -.5))

m_daily_ad <- lm(mean ~ race, data = daily_race)

broom::tidy(m_daily_ad)
```

Adherence by lapse
```{r}
lapses_per_subid <- count_study_dates |> 
  group_by(subid) |> 
  summarize(n_total = sum(n), prompt_total = sum(n_prompts)) |> 
  mutate(mean = n_total/prompt_total)  |>
  left_join(lapses |>
              group_by(subid) |> 
              summarise(n_lapse = n()), by = "subid") |>
  mutate(n_lapse = if_else(is.na(n_lapse), 0, n_lapse),
         lapse = if_else(n_lapse > 0, .5, -.5))

m_daily_ad_lapse <- lm(mean ~ lapse, data = lapses_per_subid)

broom::tidy(m_daily_ad_lapse)

lapses_per_subid |> 
  group_by(lapse) |>
  summarize(mean = mean(mean))
```



### Daily Survey Adherence over time 

   
Quite a few people have over 365 days of EMA. *Lose these in adherence over 12 month plot*.    
```{r}
dates |> 
  mutate(n = study_end - study_start) |> 
  arrange(desc(n)) |> 
  filter(n > 365) |> 
  print(n = Inf)
```


Slice into 30 day bins 
```{r}
#| code-fold: true

study_months <- count_study_dates |> 
  group_by(subid) |> 
  slice(1:30) |> 
  mutate(month = 1) |> 
  bind_rows(count_study_dates |> 
    group_by(subid) |> 
    slice(31:60) |> 
    mutate(month = 2)) |> 
  bind_rows(count_study_dates |> 
    group_by(subid) |> 
    slice(61:90) |> 
    mutate(month = 3)) |> 
  bind_rows(count_study_dates |> 
    group_by(subid) |> 
    slice(91:120) |> 
    mutate(month = 4)) |> 
  bind_rows(count_study_dates |> 
    group_by(subid) |> 
    slice(121:150) |> 
    mutate(month = 5)) |> 
  bind_rows(count_study_dates |> 
    group_by(subid) |> 
    slice(151:180) |> 
    mutate(month = 6)) |> 
  bind_rows(count_study_dates |> 
    group_by(subid) |> 
    slice(181:210) |> 
    mutate(month = 7)) |> 
  bind_rows(count_study_dates |> 
    group_by(subid) |> 
    slice(211:240) |> 
    mutate(month = 8)) |> 
  bind_rows(count_study_dates |> 
    group_by(subid) |> 
    slice(241:270) |> 
    mutate(month = 9)) |> 
  bind_rows(count_study_dates |> 
    group_by(subid) |> 
    slice(271:300) |> 
    mutate(month = 10)) |> 
  bind_rows(count_study_dates |> 
    group_by(subid) |> 
    slice(301:330) |> 
    mutate(month = 11)) |> 
  bind_rows(count_study_dates |> 
    group_by(subid) |> 
    slice(331:360) |> 
    mutate(month = 12)) |> 
  ungroup()
```


Get individual adherence scores 
```{r}
ema_month_adherence <- study_months |> 
  group_by(subid, month) |> 
  summarize(sum_n = sum(n), sum_prompts = sum(n_prompts), .groups = "rowwise") |> 
  mutate(adherence = sum_n/sum_prompts) |> 
  ungroup()
```

Summarize total adherence
```{r}
ema_month_adherence |> 
  group_by(month) |> 
  summarize(mean_adherence = mean(adherence)) 
```

Plot adherence by month
```{r}
#| label: fig-2
#| fig-cap: "Daily Update Adherence by Month on Study"

ema_month_adherence |> 
  group_by(month) |> 
  summarize(mean_adherence = mean(adherence)) |> 
  ggplot(aes(x = month, y = mean_adherence)) +
  geom_point() +
  geom_line() +
  theme_classic() +
  scale_x_continuous(name = "Month", 
                     breaks = seq(1, 12, 1)) +
  scale_y_continuous(name = "Adherence", 
                     breaks = seq(0, 1, .1), 
                     limits = c(0, 1)) +
  labs(title = "Daily update adherence over time (N = 336) ") +
  theme(legend.title = element_blank()) +
  geom_hline(aes(yintercept = mean(mean_adherence)), linetype = "dashed", linewidth = .3)
```


### Monthly Survey Overall Adherence 

Count how many months on study 
```{r}
dates <- dates |> 
  mutate(study_months = floor(interval(study_start, study_end) / months(1)))
```

Count how many completed monthly surveys
```{r}
monthly_count <-  dates |> 
  left_join(monthly |> 
  group_by(subid) |> 
  summarize(n = n()), by = "subid") |> 
  mutate(n_prompts = study_months,
         n = if_else(n > n_prompts, n_prompts, n))
```

calculate mean adherence
```{r}
mean_monthly <- monthly_count |> 
  group_by(subid) |> 
  mutate(mean = n/n_prompts) |> 
  ungroup() |> 
  summarize(mean = mean(mean))
```


**On average participants' (N = `r length(unique(study_dates$subid))`) overall adherence for the monthly survey was `r round(mean_monthly$mean, 2)*100`%.**    


```{r}
monthly_count |> 
  group_by(subid) |> 
  mutate(mean = n/n_prompts,
         adher_90 = if_else(mean >= .9, 1, 0)) |> 
  ungroup() |> 
  count(adher_90)
```

**88% of participants completed at least 90% of their monthly surveys.**

```{r}
monthly_count |> 
  group_by(subid) |> 
  mutate(mean = n/n_prompts,
         adher_80 = if_else(mean >= .8, 1, 0)) |> 
  ungroup() |> 
  count(adher_80)

316/336
```


Hist of overall adherence by subid
```{r}
#| code-fold: true

monthly_count |> 
  group_by(subid) |> 
  mutate(adherence = n/n_prompts) |> 
  ggplot(aes(x = adherence)) +
  geom_histogram(color = "black", fill = "light grey", binwidth = .1, center = .55) +
  scale_x_continuous(breaks = c(0, 0.10, 0.20, 0.30, 0.40, 0.50, 0.60, 0.70, 0.80, 0.90, 1.0)) +
  labs(y = "Frequency", x = "Proportion of monthly survey's completed",
       subtitle = "Monthly Survey Adherence (N = 336)") +
  geom_vline(aes(xintercept = mean_monthly$mean), linewidth = .3) +
  theme_classic()
```
