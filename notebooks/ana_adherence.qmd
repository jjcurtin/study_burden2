---
title: "EMA adherence" 
author: "Kendra Wyant"
date: "`r lubridate::today()`"
format: 
  html: 
    embed-resources: true
    toc: true 
    toc_depth: 4
editor_options: 
  chunk_output_type: console
--- 



Purpose: This file calculates overall weekly EMA adherence using EMA survey data (`survey_daily.csv`). 

## Set up
```{r}
#| message: false
#| warning: false
#| code-fold: true

options(conflicts.policy = "depends.ok")
library(tidyverse) 
library(lubridate)
library(skimr)
library(DiagrammeR) # for flowchart

devtools::source_url("https://github.com/jjcurtin/lab_support/blob/main/format_path.R?raw=true")

theme_set(theme_classic())

path_burden <- format_path("studydata/risk2/data_processed/burden2")
path_shared <- format_path("studydata/risk2/data_processed/shared")
```


### Data

```{r}
ema <- read_csv(here::here(path_shared, "survey_daily.csv"),
                show_col_types = FALSE) |> 
  mutate(start_date = as_datetime(start_date, tz = "America/Chicago"))

burden_quant <- read_csv(here::here(path_burden, "burden_quant.csv"),
                   show_col_types = FALSE)
burden_qual <- read_csv(here::here(path_burden, "burden_qual.csv"),
                   show_col_types = FALSE)
```

burden subids
```{r}
burden_subids <- burden_quant |> 
  pull(subid) |>
  unique()
```



### Disposition   

Study start and end dates for each subid
```{r}
study_start <- ema |> 
  group_by(subid) |> 
  arrange(start_date) |> 
  slice(1) |> 
  ungroup() |> 
  mutate(study_start = as_date(start_date)) |> 
  select(subid, study_start)

study_end <- ema |> 
  group_by(subid) |> 
  arrange(desc(start_date)) |> 
  slice(1) |> 
  ungroup() |> 
  mutate(study_end = as_date(start_date)) |> 
  select(subid, study_end)

dates <- study_start |> 
  full_join(study_end, by = "subid") |> 
  mutate(study_days = study_end - study_start)
```

Days on study     

`r nrow(dates)` participants started study/provided at least one month of EMA.   
```{r}
dates |> 
  skim(study_days) |> 
  yank("difftime")
```

For participants who completed burden study:    
Min days on study = 122 days (all participants provided data for at least 4 months)
```{r}
dates |> 
  filter(subid %in% burden_subids) |>
  skim(study_days) |> 
  yank("difftime")
```


Disposition of participants by month     

```{r}
#| code-fold: true
#| 
month_1 <- dates |> 
  filter(study_days >= 30) |> 
  nrow()

month_2 <- dates |> 
  filter(study_days >= 60)  |> 
  nrow()

month_3 <- dates |> 
  filter(study_days >= 90)  |> 
  nrow()

month_4 <- dates |> 
  filter(study_days >= 120)  |> 
  nrow()

month_4_burden <- dates |>
  filter(study_days >= 120)  |> 
  filter(subid %in% burden_subids)  |> 
  nrow()

month_5 <- dates |> 
  filter(study_days >= 150)  |> 
  nrow()

month_5_burden <- dates |>
  filter(study_days >= 150)  |> 
  filter(subid %in% burden_subids)  |> 
  nrow()

month_6 <- dates |>
  filter(study_days >= 180)  |> 
  nrow()

month_6_burden <- dates |>
  filter(study_days >= 180)  |> 
  filter(subid %in% burden_subids)  |> 
  nrow()

month_7 <- dates |>
  filter(study_days >= 210)  |> 
  nrow()

month_7_burden <- dates |>
  filter(study_days >= 210)  |> 
  filter(subid %in% burden_subids)  |> 
  nrow()

month_8 <- dates |>
  filter(study_days >= 240)  |> 
  nrow()

month_8_burden <- dates |>
  filter(study_days >= 240)  |> 
  filter(subid %in% burden_subids)  |> 
  nrow()

month_9 <- dates |>
  filter(study_days >= 270)  |> 
  nrow()

month_9_burden <- dates |>
  filter(study_days >= 270)  |> 
  filter(subid %in% burden_subids)  |> 
  nrow()

month_10 <- dates |>
  filter(study_days >= 300)  |> 
  nrow()

month_10_burden <- dates |>
  filter(study_days >= 300)  |> 
  filter(subid %in% burden_subids)  |> 
  nrow()

month_11 <- dates |>
  filter(study_days >= 330) |> 
  nrow()

month_11_burden <- dates |>
  filter(study_days >= 330)  |> 
  filter(subid %in% burden_subids)  |> 
  nrow()

month_12 <- dates |>
  filter(study_days >= 360) |> 
  nrow()

month_12_burden <- dates |>
  filter(study_days >= 360)  |> 
  filter(subid %in% burden_subids)  |> 
  nrow()
```

**Some participants on study past 4 months but have no burden data**

```{r}
#| code-fold: true

DiagrammeR::grViz("
  digraph {
  
  node [fontname = 'Arial', shape = rectangle, fixedsize = true, width = 1.7, height = .6]
  a [label = '@@1']
  b [label = '@@2']
  c [label = '@@3']
  d1 [label = '@@4']
  d2 [label = '@@5', color = crimson]
  e1 [label = '@@6']
  f1 [label = '@@7']
  g1 [label = '@@8']
  h1 [label = '@@9']
  i1 [label = '@@10']
  j1 [label = '@@11']
  k1 [label = '@@12']
  l1 [label = '@@13']
  e2 [label = '@@14']
  f2 [label = '@@15']
  g2 [label = '@@16']
  h2 [label = '@@17']
  i2 [label = '@@18']
  j2 [label = '@@19']
  k2 [label = '@@20']
  l2 [label = '@@21']
  
  
  {rank = same; d1; d2}
  a -> b
  b -> c
  c -> d1 -> d2
  d1 -> e1 -> f1 -> g1 -> h1 -> i1 -> j1 -> k1 -> l1
  d2 -> e2 -> f2 -> g2 -> h2 -> i2 -> j2 -> k2 -> l2
  }
  
  [1]: paste('Month 1\\n', 'N = ', month_1)
  [2]: str_c('Month 2\\n', 'N = ', month_2) 
  [3]: str_c('Month 3\\n', 'N = ', month_3)
  [4]: str_c('Month 4\\n', 'N = ', month_4)
  [5]: str_c('Month 4 + Survey\\n', 'N = ', month_4_burden)
  [6]: str_c('Month 5\\n', 'N = ', month_5)
  [7]: str_c('Month 6\\n', 'N = ', month_6)
  [8]: str_c('Month 7\\n', 'N = ', month_7)
  [9]: str_c('Month 8\\n', 'N = ', month_8)
  [10]: str_c('Month 9\\n', 'N = ', month_9)
  [11]: str_c('Month 10\\n', 'N = ', month_10)
  [12]: str_c('Month 11\\n', 'N = ', month_11)
  [13]: str_c('Month 12\\n', 'N = ', month_12)
  [14]: str_c('Month 5\\n', 'N = ', month_5_burden)
  [15]: str_c('Month 6\\n', 'N = ', month_6_burden)
  [16]: str_c('Month 7\\n', 'N = ', month_7_burden)
  [17]: str_c('Month 8\\n', 'N = ', month_8_burden)
  [18]: str_c('Month 9\\n', 'N = ', month_9_burden)
  [19]: str_c('Month 10\\n', 'N = ', month_10_burden)
  [20]: str_c('Month 11\\n', 'N = ', month_11_burden)
  [21]: str_c('Month 12\\n', 'N = ', month_12_burden)
  ", height = "1000px") 
```


### Overall Adherence (at least one month on study)

Get all study days for each subid
```{r}
# function to map over
get_study_days <- function(the_subid, dates) {
  study_start <- dates |>  filter(subid == the_subid) |>  pull(study_start)
  study_end <- dates |>  filter(subid == the_subid) |> pull(study_end)
  study_days <- tibble(subid = the_subid, study_day = seq(study_start, study_end - days(1), by = "day")) 
  return(study_days)
}

study_dates <- dates$subid |> 
  map_dfr(~get_study_days(.x, dates))
```


Count surveys per study day (day starts at 6 am) 
```{r}
ema_count <- ema |>
  mutate(study_day = if_else(hour(start_date) >= 6, 
                        as_date(start_date),
                        as_date(start_date) - days(1))) |> 
  count(subid, study_day) 


ema_count <- ema_count |> 
  mutate(n = if_else(n > 1, 1, n))
```

Add counts to study dates
```{r}
count_study_dates <- study_dates |> 
  left_join(ema_count, by = c("subid", "study_day")) |> 
  mutate(n = if_else(is.na(n), 0, n)) |> 
  mutate(n_prompts = 1) 
```


calculate mean adherence
```{r}
mean_ema <- count_study_dates |> 
  group_by(subid) |> 
  summarize(n_total = sum(n), prompt_total = sum(n_prompts)) |> 
  mutate(mean = n_total/prompt_total) |> 
  ungroup() |> 
  summarize(mean = mean(mean))
```


**On average participants (N = `r length(unique(study_dates$subid))`) completed `r round(mean_ema$mean, 2)` daily surveys each day they were on study. That is their overall adherence for a once daily EMA was `r round(mean_ema$mean, 2)*100`%.**    


Hist of overall adherence by subid
```{r}
#| code-fold: true

count_study_dates |> 
  group_by(subid) |> 
  summarise(n_total = sum(n),
            n_prompts = sum(n_prompts)) |> 
  mutate(adherence = n_total/n_prompts) |> 
  ggplot(aes(x = adherence)) +
  geom_histogram(color = "black", fill = "light grey", binwidth = .1, center = .55) +
  scale_x_continuous(breaks = c(0, 0.10, 0.20, 0.30, 0.40, 0.50, 0.60, 0.70, 0.80, 0.90, 1.0)) +
  labs(y = "Frequency", x = "Proportion of daily survey's completed",
       subtitle = "Daily Survey Adherence (N = 247)") +
  geom_vline(aes(xintercept = mean_ema$mean), linewidth = .3) +
  theme_classic()
```

### Adherence over time (at least one month on study)

   
Quite a few people have over 365 days of EMA. *Lose these in adherence over 12 month plot*.    
```{r}
dates |> 
  mutate(n = study_end - study_start) |> 
  arrange(desc(n)) |> 
  filter(n > 365) |> 
  print(n = Inf)
```


Slice into 30 day bins 
```{r}
#| code-fold: true

study_months <- count_study_dates |> 
  group_by(subid) |> 
  slice(1:30) |> 
  mutate(month = 1) |> 
  bind_rows(count_study_dates |> 
    group_by(subid) |> 
    slice(31:60) |> 
    mutate(month = 2)) |> 
  bind_rows(count_study_dates |> 
    group_by(subid) |> 
    slice(61:90) |> 
    mutate(month = 3)) |> 
  bind_rows(count_study_dates |> 
    group_by(subid) |> 
    slice(91:120) |> 
    mutate(month = 4)) |> 
  bind_rows(count_study_dates |> 
    group_by(subid) |> 
    slice(121:150) |> 
    mutate(month = 5)) |> 
  bind_rows(count_study_dates |> 
    group_by(subid) |> 
    slice(151:180) |> 
    mutate(month = 6)) |> 
  bind_rows(count_study_dates |> 
    group_by(subid) |> 
    slice(181:210) |> 
    mutate(month = 7)) |> 
  bind_rows(count_study_dates |> 
    group_by(subid) |> 
    slice(211:240) |> 
    mutate(month = 8)) |> 
  bind_rows(count_study_dates |> 
    group_by(subid) |> 
    slice(241:270) |> 
    mutate(month = 9)) |> 
  bind_rows(count_study_dates |> 
    group_by(subid) |> 
    slice(271:300) |> 
    mutate(month = 10)) |> 
  bind_rows(count_study_dates |> 
    group_by(subid) |> 
    slice(301:330) |> 
    mutate(month = 11)) |> 
  bind_rows(count_study_dates |> 
    group_by(subid) |> 
    slice(331:360) |> 
    mutate(month = 12)) |> 
  ungroup()
```


Get individual adherence scores 
```{r}
ema_month_adherence <- study_months |> 
  group_by(subid, month) |> 
  summarize(sum_n = sum(n), sum_prompts = sum(n_prompts), .groups = "rowwise") |> 
  mutate(adherence = sum_n/sum_prompts) |> 
  ungroup()
```

Summarize total adherence
```{r}
ema_month_adherence |> 
  group_by(month) |> 
  summarize(mean_adherence = mean(adherence)) 
```

Plot adherence by month
```{r}
#| code-fold: true

ema_month_adherence |> 
  group_by(month) |> 
  summarize(mean_adherence = mean(adherence)) |> 
  ggplot(aes(x = month, y = mean_adherence)) +
  geom_point() +
  geom_line() +
  theme_classic() +
  scale_x_continuous(name = "month", 
                     breaks = seq(1, 12, 1)) +
  scale_y_continuous(name = "adherence", 
                     breaks = seq(0, 1, .1), 
                     limits = c(0, 1)) +
  labs(title = "Daily survey adherence over time (N = 336) ") +
  theme(legend.title = element_blank()) +
  geom_hline(aes(yintercept = mean(mean_adherence)), linetype = "dashed", linewidth = .3)
```




### Overall Adherence (burden sample/4 months on study)

Get all study days for each subid
```{r}
#| code-fold: true

study_dates <- burden_subids |> 
  map_dfr(~get_study_days(.x, dates))
```


Count surveys per study day (day starts at 6 am) 
```{r}
#| code-fold: true

ema_count <- ema |>
  mutate(study_day = if_else(hour(start_date) >= 6, 
                        as_date(start_date),
                        as_date(start_date) - days(1))) |> 
  count(subid, study_day) 


ema_count <- ema_count |> 
  mutate(n = if_else(n > 1, 1, n))
```

Add counts to study dates
```{r}
#| code-fold: true

count_study_dates <- study_dates |> 
  left_join(ema_count, by = c("subid", "study_day")) |> 
  mutate(n = if_else(is.na(n), 0, n)) |> 
  mutate(n_prompts = 1) 
```


calculate mean adherence
```{r}
#| code-fold: true

mean_ema <- count_study_dates |> 
  group_by(subid) |> 
  summarize(n_total = sum(n), prompt_total = sum(n_prompts)) |> 
  mutate(mean = n_total/prompt_total) |> 
  ungroup() |> 
  summarize(mean = mean(mean))
```


**On average participants (N = `r length(unique(study_dates$subid))`) completed `r round(mean_ema$mean, 2)` daily surveys each day they were on study. That is their overall adherence for a once daily EMA was `r round(mean_ema$mean, 2)*100`%.**    


Hist of overall adherence by subid
```{r}
#| code-fold: true

count_study_dates |> 
  group_by(subid) |> 
  summarise(n_total = sum(n),
            n_prompts = sum(n_prompts)) |> 
  mutate(adherence = n_total/n_prompts) |> 
  ggplot(aes(x = adherence)) +
  geom_histogram(color = "black", fill = "light grey", binwidth = .1, center = .55) +
  scale_x_continuous(breaks = c(0, 0.10, 0.20, 0.30, 0.40, 0.50, 0.60, 0.70, 0.80, 0.90, 1.0)) +
  labs(y = "Frequency", x = "Proportion of daily survey's completed",
       subtitle = "Daily Survey Adherence (N = 247)") +
  geom_vline(aes(xintercept = mean_ema$mean), linewidth = .3) +
  theme_classic()
```



### Adherence over time (Burden sample/4 months on study)


Slice into 30 day bins 
```{r}
#| code-fold: true

study_months <- count_study_dates |> 
  group_by(subid) |> 
  slice(1:30) |> 
  mutate(month = 1) |> 
  bind_rows(count_study_dates |> 
    group_by(subid) |> 
    slice(31:60) |> 
    mutate(month = 2)) |> 
  bind_rows(count_study_dates |> 
    group_by(subid) |> 
    slice(61:90) |> 
    mutate(month = 3)) |> 
  bind_rows(count_study_dates |> 
    group_by(subid) |> 
    slice(91:120) |> 
    mutate(month = 4)) |> 
  bind_rows(count_study_dates |> 
    group_by(subid) |> 
    slice(121:150) |> 
    mutate(month = 5)) |> 
  bind_rows(count_study_dates |> 
    group_by(subid) |> 
    slice(151:180) |> 
    mutate(month = 6)) |> 
  bind_rows(count_study_dates |> 
    group_by(subid) |> 
    slice(181:210) |> 
    mutate(month = 7)) |> 
  bind_rows(count_study_dates |> 
    group_by(subid) |> 
    slice(211:240) |> 
    mutate(month = 8)) |> 
  bind_rows(count_study_dates |> 
    group_by(subid) |> 
    slice(241:270) |> 
    mutate(month = 9)) |> 
  bind_rows(count_study_dates |> 
    group_by(subid) |> 
    slice(271:300) |> 
    mutate(month = 10)) |> 
  bind_rows(count_study_dates |> 
    group_by(subid) |> 
    slice(301:330) |> 
    mutate(month = 11)) |> 
  bind_rows(count_study_dates |> 
    group_by(subid) |> 
    slice(331:360) |> 
    mutate(month = 12)) |> 
  ungroup()
```


Get individual adherence scores 
```{r}
#| code-fold: true

ema_month_adherence <- study_months |> 
  group_by(subid, month) |> 
  summarize(sum_n = sum(n), sum_prompts = sum(n_prompts), .groups = "rowwise") |> 
  mutate(adherence = sum_n/sum_prompts) |> 
  ungroup()
```

Summarize total adherence
```{r}
#| code-fold: true

ema_month_adherence |> 
  group_by(month) |> 
  summarize(mean_adherence = mean(adherence)) 
```

Plot adherence by month
```{r}
#| code-fold: true

ema_month_adherence |> 
  group_by(month) |> 
  summarize(mean_adherence = mean(adherence)) |> 
  ggplot(aes(x = month, y = mean_adherence)) +
  geom_point() +
  geom_line() +
  theme_classic() +
  scale_x_continuous(name = "month", 
                     breaks = seq(1, 12, 1)) +
  scale_y_continuous(name = "adherence", 
                     breaks = seq(0, 1, .1), 
                     limits = c(0, 1)) +
  labs(title = "Daily survey adherence over time (N = 247) ") +
  theme(legend.title = element_blank()) +
  geom_hline(aes(yintercept = mean(mean_adherence)), linetype = "dashed", linewidth = .3)
```

