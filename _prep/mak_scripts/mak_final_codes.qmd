---
title: "Make final codes" 
author: "Kendra Wyant and Olivia Cox"
date: "`r lubridate::today()`"
format: 
  html: 
    embed-resources: true
    toc: true 
    toc_depth: 4
editor_options: 
  chunk_output_type: console
---   

## Notes

This file resolves all conflicts and creates final codes for analyses.


## Set up
```{r}
#| include: false

options(conflicts.policy = "depends.ok")
library(tidyverse) 
library(janitor)

devtools::source_url("https://github.com/jjcurtin/lab_support/blob/main/format_path.R?raw=true")

theme_set(theme_classic())

path_prep <- format_path("studydata/risk2/data_processed/prep")
```

## Read in data

```{r}
olivias_codes <- read_csv(file.path(path_prep, "qual_data_codes_OC.csv"),
                          show_col_types = FALSE)
kendras_codes <- read_csv(file.path(path_prep, "qual_data_codes_KW.csv"),
                          show_col_types = FALSE)
comments <- read_csv(file.path(path_prep, "final_comments.csv"),
                          show_col_types = FALSE)
```


### Filter to final comments and rename columns
```{r}
kendras_codes <- kendras_codes |> 
  select(-complete_date) |> 
  right_join(comments, by = c("subid", "user_survey_guid", "data",
                              "answer")) |> 
  rename_with(~str_c(., "_KW"), acceptability:`neutral/mixed`)
```

```{r}
olivias_codes <- olivias_codes |> 
  select(-complete_date) |> 
  right_join(comments, by = c("subid", "user_survey_guid", "data",
                              "answer")) |> 
  rename_with(~str_c(., "_OC"), acceptability:`neutral/mixed`)
```


### Combine codes

```{r}
codes <- olivias_codes |> 
  arrange(subid, data, answer) |> 
  bind_cols( kendras_codes |> 
               arrange(subid, data, answer) |> 
               select(acceptability_KW:privacy)) |> 
  relocate(complete_date, .after = user_survey_guid)
```

### Resolve discrepant codes

Discrepancies were discussed between both coders and then OC recoded based on our discussion.    


Acceptability 
```{r}
codes <- codes |> 
  mutate(acceptability_resolved = if_else(acceptability_KW == acceptability_OC, acceptability_KW, NA))

rows_accept <- which(codes$acceptability_KW != codes$acceptability_OC) 

accept_disc <- read_csv(here::here(path_prep, "acceptability_discr.csv"),
                         show_col_types = FALSE) |> 
  pull(acceptability_resolve)

codes$acceptability_resolved[rows_accept] <- accept_disc

```


Sustainability
```{r}
codes <- codes |> 
  mutate(sustainability_resolved = if_else(sustainability_KW == sustainability_OC, sustainability_KW, NA))

rows_sustain <- which(codes$sustainability_KW != codes$sustainability_OC) 

sustain_disc <- read_csv(here::here(path_prep, "sustainability_discr.csv"),
                         show_col_types = FALSE) |> 
  pull(sustainability_resolve)

codes$sustainability_resolved[rows_sustain] <- sustain_disc

```

Benefits

```{r}
codes <- codes |>
  mutate(benefits_resolved = if_else(benefits_KW == benefits_OC, benefits_KW, NA))

rows_benefits <- which(codes$benefits_KW != codes$benefits_OC)

benefits_disc <- read_csv(here::here(path_prep, "benefits_discr.csv"),
                         show_col_types = FALSE) |>
  pull(benefits_resolve)

codes$benefits_resolved[rows_benefits] <- benefits_disc

```


Trust

```{r}
codes <- codes |> 
  mutate(trust_resolved = if_else(trust_KW == trust_OC, trust_KW, NA))

rows_trust <- which(codes$trust_KW != codes$trust_OC) 

trust_disc <- read_csv(here::here(path_prep, "trust_discr.csv"),
                         show_col_types = FALSE) |> 
  pull(trust_resolve)

codes$trust_resolved[rows_trust] <- trust_disc

codes <- codes |> 
  mutate(trust_resolved = if_else(is.na(trust_resolved), as.numeric(privacy), as.numeric(trust_resolved)))

```

Usability

```{r}
codes <- codes |> 
  mutate(usability_resolved = if_else(usability_KW == usability_OC, usability_KW, NA))

rows_usability <- which(codes$usability_KW != codes$usability_OC) 

usability_disc <- read_csv(here::here(path_prep, "usability_discr.csv"),
                         show_col_types = FALSE) |> 
  pull(usability_resolve)

codes$usability_resolved[rows_usability] <- usability_disc

```

feedback

```{r}
codes <- codes |> 
  mutate(feedback_resolved = if_else(feedback_KW == feedback_OC, feedback_KW, NA))

rows_feedback <- which(codes$feedback_KW != codes$feedback_OC) 

feedback_disc <- read_csv(here::here(path_prep, "feedback_discr.csv"),
                          show_col_types = FALSE) |> 
pull(feedback_resolve)

codes$feedback_resolved[rows_feedback] <- feedback_disc

```

positive

```{r}
codes <- codes |> 
  mutate(positive_resolved = if_else(positive_KW == positive_OC, positive_KW, NA))

rows_positive <- which(codes$positive_KW != codes$positive_OC) 

positive_disc <- read_csv(here::here(path_prep, "positive_discr.csv"),
                         show_col_types = FALSE) |> 
  pull(positive_resolve)

codes$positive_resolved[rows_positive] <- positive_disc

```

negative

```{r}
codes <- codes |> 
  mutate(negative_resolved = if_else(negative_KW == negative_OC, negative_KW, NA))

rows_negative <- which(codes$negative_KW != codes$negative_OC) 

negative_disc <- read_csv(here::here(path_prep, "negative_discr.csv"),
                         show_col_types = FALSE) |> 
  pull(negative_resolve)

codes$negative_resolved[rows_negative] <- negative_disc

```

mixed/neutral

```{r}
codes <- codes |> 
  mutate(neutral_mixed_resolved = if_else(`neutral/mixed_KW` == `neutral/mixed_OC`, `neutral/mixed_KW`, NA))

rows_mixed <- which(codes$`neutral/mixed_KW` != codes$`neutral/mixed_OC`) 

mixed_disc <- read_csv(here::here(path_prep, "neutral_mixed_discr.csv"),
                         show_col_types = FALSE) |> 
  pull(neutral_mixed_resolve)

codes$neutral_mixed_resolved[rows_mixed] <- mixed_disc

```

Final codes (except discrepancies on feedback have not been addressed)

```{r}
codes |> 
  select(-c(acceptability_OC:`neutral/mixed_KW`), -user_survey_guid) |> 
  write_csv(here::here(path_prep, "final_analysis_comments.csv"))
```

