{
  "hash": "0e0f4a942d627ea33d44b7874fbdce5e",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"EMA adherence\" \nauthor: \"Kendra Wyant\"\ndate: \"2024-09-18\"\nformat: \n  html: \n    embed-resources: true\n    toc: true \n    toc_depth: 4\neditor_options: \n  chunk_output_type: console\n--- \n\n\n\n\n\nPurpose: This file calculates overall weekly EMA adherence using EMA survey data (`survey_daily.csv`). \n\n## Set up\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n#| message: false\n\noptions(conflicts.policy = \"depends.ok\")\nlibrary(tidyverse) \n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\n#| message: false\n\nlibrary(lubridate)\n\n\ndevtools::source_url(\"https://github.com/jjcurtin/lab_support/blob/main/format_path.R?raw=true\")\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nℹ SHA-1 hash of file is \"a58e57da996d1b70bb9a5b58241325d6fd78890f\"\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\n#| message: false\n\ntheme_set(theme_classic())\n\npath_burden <- format_path(\"studydata/risk2/data_processed/burden2\")\npath_shared <- format_path(\"studydata/risk2/data_processed/shared\")\n```\n:::\n\n\n\n\n### Data\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nema <- read_csv(here::here(path_shared, \"survey_daily.csv\"),\n                show_col_types = FALSE) |> \n  mutate(start_date = as_datetime(start_date, tz = \"America/Chicago\"))\n\nburden_quant <- read_csv(here::here(path_burden, \"burden_quant.csv\"),\n                   show_col_types = FALSE)\nburden_qual <- read_csv(here::here(path_burden, \"burden_qual.csv\"),\n                   show_col_types = FALSE)\n```\n:::\n\n\n\nsubids\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nsubids <- burden_quant |> \n  select(subid) |> \n  bind_rows(burden_qual |> \n              select(subid)) |> \n  pull(subid) |>\n  unique()\n```\n:::\n\n\n\nFilter ema to burden subids\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nema <- ema |>\n  filter(subid %in% subids)\n```\n:::\n\n\n\n\n### Overall Adherence\n\nData still in long format so slicing to single variable on survey\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nema <- ema |> \n  group_by(subid, start_date) |> \n  slice(1) |> \n  ungroup()\n```\n:::\n\n\n\nStudy start and end dates for each subid\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nstudy_start <- ema |> \n  group_by(subid) |> \n  arrange(start_date) |> \n  slice(1) |> \n  ungroup() |> \n  mutate(study_start = as_date(start_date)) |> \n  select(subid, study_start)\n\nstudy_end <- ema |> \n  group_by(subid) |> \n  arrange(desc(start_date)) |> \n  slice(1) |> \n  ungroup() |> \n  mutate(study_end = as_date(start_date)) |> \n  select(subid, study_end)\n\ndates <- tibble(subid = subids) |> \n  full_join(study_start, by = \"subid\") |> \n  full_join(study_end, by = \"subid\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\ndates |> \n  select(study_start, study_end) |> \n  skimr::skim()\n```\n\n::: {.cell-output-display}\n\nTable: Data summary\n\n|                         |                             |\n|:------------------------|:----------------------------|\n|Name                     |select(dates, study_start... |\n|Number of rows           |247                          |\n|Number of columns        |2                            |\n|_______________________  |                             |\n|Column type frequency:   |                             |\n|Date                     |2                            |\n|________________________ |                             |\n|Group variables          |None                         |\n\n\n**Variable type: Date**\n\n|skim_variable | n_missing| complete_rate|min        |max        |median     | n_unique|\n|:-------------|---------:|-------------:|:----------|:----------|:----------|--------:|\n|study_start   |         0|             1|2003-04-21 |2023-12-20 |2022-11-30 |      197|\n|study_end     |         0|             1|2022-04-05 |2024-05-01 |2023-10-31 |      146|\n\n\n:::\n:::\n\n\n\n\nSubid 1146 has incorrect start year. Formatting issue with first EMA - remove this survey for calculating dates.\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nema |> \n  filter(subid == 1146)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 242 × 9\n   subid user_survey_guid    start_date          complete_date status utc_offset\n   <dbl> <chr>               <dttm>                      <dbl> <chr>  <chr>     \n 1  1146 0b4ef392-61ef-4631… 2003-04-21 15:54:28           -1  incom… \"{\\\"utc_o…\n 2  1146 4de9d05a-ba2e-41a9… 2022-08-16 12:42:25   1660672214. compl… \"{\\\"utc_o…\n 3  1146 da1e87ed-6f87-4a4a… 2022-08-17 12:46:31   1660758482. compl… \"{\\\"utc_o…\n 4  1146 c34872a2-3ffa-4bec… 2022-08-18 12:45:10   1660845108. compl… \"{\\\"utc_o…\n 5  1146 a4388ae0-1422-49fe… 2022-08-19 16:41:41   1660945424. compl… \"{\\\"utc_o…\n 6  1146 c5780e26-accc-4a41… 2022-08-20 13:38:39   1661020845. compl… \"{\\\"utc_o…\n 7  1146 ad9fb4d4-c10e-4fe1… 2022-08-21 16:11:17   1661116421. compl… \"{\\\"utc_o…\n 8  1146 35983c35-a6f2-4e3e… 2022-08-22 19:42:38           -1  incom… \"{\\\"utc_o…\n 9  1146 f8b82f7f-caac-4b68… 2022-08-23 10:57:44   1661270349. compl… \"{\\\"utc_o…\n10  1146 7de068b0-6a3b-414b… 2022-08-24 17:19:08   1661379606. compl… \"{\\\"utc_o…\n# ℹ 232 more rows\n# ℹ 3 more variables: variable_name <chr>, answer <chr>, answer_date <dbl>\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nema <- ema |> \n  filter(user_survey_guid != \"0b4ef392-61ef-4631-b672-117a4e642f67\")\n```\n:::\n\n\n\nRecalculate study start and end dates\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nstudy_start <- ema |> \n  group_by(subid) |> \n  arrange(start_date) |> \n  slice(1) |> \n  ungroup() |> \n  mutate(study_start = as_date(start_date)) |> \n  select(subid, study_start)\n\nstudy_end <- ema |> \n  group_by(subid) |> \n  arrange(desc(start_date)) |> \n  slice(1) |> \n  ungroup() |> \n  mutate(study_end = as_date(start_date)) |> \n  select(subid, study_end)\n\ndates <- tibble(subid = subids) |> \n  full_join(study_start, by = \"subid\") |> \n  full_join(study_end, by = \"subid\")\n```\n:::\n\n\n\n\nGet all study days for each subid\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n# function to map over\nget_study_days <- function(the_subid, dates) {\n  study_start <- dates |>  filter(subid == the_subid) |>  pull(study_start)\n  study_end <- dates |>  filter(subid == the_subid) |> pull(study_end)\n  study_days <- tibble(subid = the_subid, study_day = seq(study_start, study_end - days(1), by = \"day\")) \n  return(study_days)\n}\n\nstudy_dates <- subids |> \n  map_dfr(~get_study_days(.x, dates))\n```\n:::\n\n\n\n\nCount surveys per study day (day starts at 6 am) \n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nema_count <- ema |>\n  mutate(study_day = if_else(hour(start_date) >= 6, \n                        as_date(start_date),\n                        as_date(start_date) - days(1))) |> \n  count(subid, study_day) \n\n\nema_count <- ema_count |> \n  mutate(n = if_else(n > 1, 1, n))\n```\n:::\n\n\n\nAdd counts to study dates\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\ncount_study_dates <- study_dates |> \n  left_join(ema_count, by = c(\"subid\", \"study_day\")) |> \n  mutate(n = if_else(is.na(n), 0, n)) |> \n  mutate(n_prompts = 1) \n```\n:::\n\n\n\n\ncalculate mean adherence\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nmean_ema <- count_study_dates |> \n  group_by(subid) |> \n  summarize(n_total = sum(n), prompt_total = sum(n_prompts)) |> \n  mutate(mean = n_total/prompt_total) |> \n  ungroup() |> \n  summarize(mean = mean(mean))\n```\n:::\n\n\n\n\nOn average participants (N = 247) completed 0.75 daily surveys each day they were on study. That is their overall adherence for a once daily EMA was 75%.    \n\n\nHist of overall adherence by subid\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\ncount_study_dates |> \n  group_by(subid) |> \n  summarise(n_total = sum(n),\n            n_prompts = sum(n_prompts)) |> \n  mutate(adherence = n_total/n_prompts) |> \n  ggplot(aes(x = adherence)) +\n  geom_histogram(color = \"black\", fill = \"light grey\", binwidth = .1, center = .55) +\n  scale_x_continuous(breaks = c(0, 0.10, 0.20, 0.30, 0.40, 0.50, 0.60, 0.70, 0.80, 0.90, 1.0)) +\n  labs(y = \"Frequency\", x = \"Proportion of daily survey's completed\",\n       subtitle = \"Daily Survey Adherence (N = 247)\") +\n  geom_vline(aes(xintercept = mean_ema$mean), size = .3) +\n  theme_classic()\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](ana_compliance_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n\n\n\n## Adherence over time\n\n   \nQuite a few people have over 365 days of EMA. **Lose these in adherence over 12 month plot**.    \n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\ndates |> \n  mutate(n = study_end - study_start) |> \n  arrange(desc(n)) |> \n  filter(n > 365) |> \n  print(n = Inf)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 52 × 4\n   subid study_start study_end  n       \n   <dbl> <date>      <date>     <drtn>  \n 1  1152 2022-09-06  2023-10-27 416 days\n 2  1200 2022-11-01  2023-12-22 416 days\n 3  1146 2022-08-16  2023-10-03 413 days\n 4  1286 2023-02-28  2024-04-12 409 days\n 5  1211 2022-11-17  2023-12-27 405 days\n 6  1080 2022-05-10  2023-06-17 403 days\n 7  1197 2022-10-31  2023-12-08 403 days\n 8  1168 2022-10-03  2023-10-31 393 days\n 9  1035 2022-03-07  2023-04-01 390 days\n10  1071 2022-04-29  2023-05-23 389 days\n11  1036 2022-03-11  2023-04-03 388 days\n12  1044 2022-03-25  2023-04-17 388 days\n13  1302 2023-03-16  2024-04-07 388 days\n14  1029 2022-02-21  2023-03-15 387 days\n15  1030 2022-02-23  2023-03-16 386 days\n16  1046 2022-03-28  2023-04-18 386 days\n17  1122 2022-07-11  2023-08-01 386 days\n18  1249 2023-01-10  2024-01-31 386 days\n19  1012 2021-09-15  2022-10-05 385 days\n20  1112 2022-06-27  2023-07-17 385 days\n21  1148 2022-08-19  2023-09-08 385 days\n22  1033 2022-03-03  2023-03-22 384 days\n23  1048 2022-03-29  2023-04-17 384 days\n24  1051 2022-03-30  2023-04-17 383 days\n25  1038 2022-03-14  2023-03-31 382 days\n26  1099 2022-06-13  2023-06-30 382 days\n27  1219 2022-12-02  2023-12-19 382 days\n28  1222 2022-12-02  2023-12-19 382 days\n29  1113 2022-06-27  2023-07-13 381 days\n30  1039 2022-03-14  2023-03-29 380 days\n31  1216 2022-11-30  2023-12-15 380 days\n32  1066 2022-04-27  2023-05-11 379 days\n33  1201 2022-11-01  2023-11-15 379 days\n34  1218 2022-12-01  2023-12-15 379 days\n35  1306 2023-03-21  2024-04-03 379 days\n36  1278 2023-02-16  2024-02-29 378 days\n37  1050 2022-03-31  2023-04-12 377 days\n38  1061 2022-04-22  2023-05-02 375 days\n39  1041 2022-03-17  2023-03-24 372 days\n40  1037 2022-03-14  2023-03-20 371 days\n41  1009 2021-05-04  2022-05-09 370 days\n42  1182 2022-10-19  2023-10-23 369 days\n43  1188 2022-10-22  2023-10-26 369 days\n44  1006 2021-04-21  2022-04-24 368 days\n45  1079 2022-05-09  2023-05-12 368 days\n46  1153 2022-09-06  2023-09-09 368 days\n47  1312 2023-03-27  2024-03-29 368 days\n48  1023 2022-02-09  2023-02-11 367 days\n49  1031 2022-02-28  2023-03-02 367 days\n50  1081 2022-05-10  2023-05-12 367 days\n51  1068 2022-04-27  2023-04-28 366 days\n52  1324 2023-04-18  2024-04-18 366 days\n```\n\n\n:::\n:::\n\n\n\n\nSlice into 30 day bins \n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nstudy_months <- count_study_dates |> \n  group_by(subid) |> \n  slice(1:30) |> \n  mutate(month = 1) |> \n  bind_rows(count_study_dates |> \n    group_by(subid) |> \n    slice(31:60) |> \n    mutate(month = 2)) |> \n  bind_rows(count_study_dates |> \n    group_by(subid) |> \n    slice(61:90) |> \n    mutate(month = 3)) |> \n  bind_rows(count_study_dates |> \n    group_by(subid) |> \n    slice(91:120) |> \n    mutate(month = 4)) |> \n  bind_rows(count_study_dates |> \n    group_by(subid) |> \n    slice(121:150) |> \n    mutate(month = 5)) |> \n  bind_rows(count_study_dates |> \n    group_by(subid) |> \n    slice(151:180) |> \n    mutate(month = 6)) |> \n  bind_rows(count_study_dates |> \n    group_by(subid) |> \n    slice(181:210) |> \n    mutate(month = 7)) |> \n  bind_rows(count_study_dates |> \n    group_by(subid) |> \n    slice(211:240) |> \n    mutate(month = 8)) |> \n  bind_rows(count_study_dates |> \n    group_by(subid) |> \n    slice(241:270) |> \n    mutate(month = 9)) |> \n  bind_rows(count_study_dates |> \n    group_by(subid) |> \n    slice(271:300) |> \n    mutate(month = 10)) |> \n  bind_rows(count_study_dates |> \n    group_by(subid) |> \n    slice(301:330) |> \n    mutate(month = 11)) |> \n  bind_rows(count_study_dates |> \n    group_by(subid) |> \n    slice(331:360) |> \n    mutate(month = 12)) |> \n  ungroup()\n```\n:::\n\n\n\n\nGet individual adherence scores \n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nema_month_adherence <- study_months |> \n  group_by(subid, month) |> \n  summarize(sum_n = sum(n), sum_prompts = sum(n_prompts), .groups = \"rowwise\") |> \n  mutate(adherence = sum_n/sum_prompts) |> \n  ungroup()\n```\n:::\n\n\n\nSummarize total adherence\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nema_month_adherence |> \n  group_by(month) |> \n  summarize(mean_adherence = mean(adherence)) \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 12 × 2\n   month mean_adherence\n   <dbl>          <dbl>\n 1     1          0.840\n 2     2          0.813\n 3     3          0.790\n 4     4          0.753\n 5     5          0.744\n 6     6          0.746\n 7     7          0.731\n 8     8          0.724\n 9     9          0.698\n10    10          0.704\n11    11          0.688\n12    12          0.691\n```\n\n\n:::\n:::\n\n\n\nPlot adherence by month\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nema_month_adherence |> \n  group_by(month) |> \n  summarize(mean_adherence = mean(adherence)) |> \n  ggplot(aes(x = month, y = mean_adherence)) +\n  geom_point() +\n  geom_line() +\n  theme_classic() +\n  scale_x_continuous(name = \"month\", \n                     breaks = seq(1, 12, 1)) +\n  scale_y_continuous(name = \"adherence\", \n                     breaks = seq(0, 1, .1), \n                     limits = c(0, 1)) +\n  labs(title = \"Daily survey adherence over time (N = 247) \") +\n  theme(legend.title = element_blank()) +\n  geom_hline(aes(yintercept = mean(mean_adherence)), linetype = \"dashed\", size = .3)\n```\n\n::: {.cell-output-display}\n![](ana_compliance_files/figure-html/unnamed-chunk-19-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "ana_compliance_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}